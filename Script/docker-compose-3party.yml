version: "3.0"

services:
  mongo-container:
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - my-network
    restart: always

  sql-container:
    image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
    ports:
      - 1433:1433
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=vuedpi1@34
      - MSSQL_PID=Express
    networks:
      - my-network
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - my-network
    # network_mode: host
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - my-network
    # network_mode: host
    #volumes:
    #  - grafana:/var/lib/grafana

  influxdb:
    image: influxdb
    container_name: influxdb
    ports:
      - '8086:8086'
    networks:
      - my-network
    # network_mode: host
    #volumes:
    #  - influxdb:/var/lib/influxdb

  redis:
    image: redis
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - 6379:6379
    networks:
      - my-network
     #network_mode: host
    volumes:
      - redis-data:/data
     

  #redis-commander:
  #  image: rediscommander/redis-commander:latest
  #  environment:
  #    - REDIS_HOSTS=local:redis:6379       
  #     #- REDIS_HOSTS=laptop-IPS8SK8E:redis:6379
  #    - HTTP_USER=root
  #    - HTTP_PASSWORD=secret
  #  ports:
  #    - 8081:8081
  #  depends_on:
  #    - redis
   
  seq:
    image: datalust/seq 
    container_name: seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:80
    networks:
      - my-network
    # network_mode: host
    
  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    ports:
      - 5775:5775/udp
      - 5778:5778
      - 6831:6831/udp
      - 6832:6832/udp
      - 9411:9411
      - 14268:14268
      - 16686:16686
    networks:
      - my-network
    # network_mode: host

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: secret
      POSTGRES_USER: appuser
    ports: 
      - 5432:5432
    networks:
      - my-network
    volumes:
      - postgre-data:/data

networks:
  my-network:
    #name: my-network
    external: true

volumes:
  redis-data:
  postgre-data:
  mongodb_data_container:
  

